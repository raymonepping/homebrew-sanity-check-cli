#!/usr/bin/env bash
set -euo pipefail

VERSION="1.0.0"
CLI_NAME="sanity-check-cli"
CONFIG_FILE=""
ACTION="run"
MODE="all"
QUIET=false

FOO=""

# --- Smart LIB and TPL lookup (Homebrew-friendly) ---
        HOMEBREW_PREFIX="$(brew --prefix 2>/dev/null || true)"

POSSIBLE_LIB_DIRS=(
  "$HOMEBREW_PREFIX/share/$CLI_NAME/lib"
  "$HOMEBREW_PREFIX/opt/$CLI_NAME/share/$CLI_NAME/lib"
  "./lib"
)
POSSIBLE_TPL_DIRS=(
  "$HOMEBREW_PREFIX/share/$CLI_NAME/tpl"
  "$HOMEBREW_PREFIX/opt/$CLI_NAME/share/$CLI_NAME/tpl"
  "./tpl"
)

LIB_DIR=""
for d in "${POSSIBLE_LIB_DIRS[@]}"; do
  [[ -d "$d" ]] && LIB_DIR="$d" && break
done
[[ -z "$LIB_DIR" ]] && echo "‚ùå Could not locate lib/ directory." && exit 1

TPL_DIR=""
for d in "${POSSIBLE_TPL_DIRS[@]}"; do
  [[ -d "$d" ]] && TPL_DIR="$d" && break
done
[[ -z "$TPL_DIR" ]] && echo "‚ùå Could not locate tpl/ directory." && exit 1

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# --- Load common utils ---
source "$LIB_DIR/sanity_utils.sh"
source "$LIB_DIR/check_router.sh"
source "$LIB_DIR/tool_versions.sh"

# --- Smart JSON config file resolution ---
DEFAULT_CONFIG_LOCATIONS=(
  "$HOME/.sanity.config.json"
  "$HOME/.config/sanity_check/.sanity.config.json"
  "./.sanity.config.json"
)

for c in "${DEFAULT_CONFIG_LOCATIONS[@]}"; do
  [[ -f "$c" ]] && CONFIG_FILE="$c" && break
done

# --- CLI Argument Parsing ---
FILES=()
while [[ $# -gt 0 ]]; do
  case "$1" in
    --fix) MODE="fix"; shift;;
    --lint) MODE="lint"; shift;;
    --quiet) QUIET=true; shift;;
    --file) FILES+=("$2"); shift 2;;
    --config) CONFIG_FILE="$2"; shift 2;;
    --version) echo "$CLI_NAME v$VERSION"; print_all_tool_versions; exit 0;;
    --help)
      cat <<EOF
üß™ $CLI_NAME v$VERSION
USAGE: $0 [--lint|--fix] [--file FILE] [--config CONFIG] [--quiet] [--version] [--help]
EOF
      exit 0
      ;;
    *) FILES+=("$1"); shift;;
  esac
done

# --- Validate config ---
if [[ -z "$CONFIG_FILE" || ! -f "$CONFIG_FILE" ]]; then
  echo "‚ö†Ô∏è  No valid config file found. Proceeding with default tool set."
else
  echo "‚úÖ Using config: $CONFIG_FILE"
fi

# --- Find files if none specified ---
if [[ ${#FILES[@]} -eq 0 ]]; then
  mapfile -t FILES < <(find . -type f \( -name "*.sh" -o -name "*.py" -o -name "*.js" -o -name "*.ts" -o -name "*.tf" -o -name "*.hcl" -o -name "Dockerfile" -o -name "*.yml" -o -name "*.yaml" \))
fi

# --- Route files ---
echo "üîç Running sanity check on ${#FILES[@]} file(s)..."
for file in "${FILES[@]}"; do
  route_file_check "$file" "$MODE"
done

echo "‚úÖ Sanity check complete."
exit 0
